import io.franzbecker.gradle.lombok.task.DelombokTask

plugins {
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
    id 'jacoco'
}

group 'io.ib67.dash'
version '0.1.0'

subprojects {
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'jacoco'
    afterEvaluate {
/*
  Java
 */
        def targetJavaVersion = 17
        java {
            def javaVersion = JavaVersion.toVersion(targetJavaVersion)
            sourceCompatibility = javaVersion
            targetCompatibility = javaVersion
            if (JavaVersion.current() < javaVersion) {
                toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
            }
        }
/*
  Lombok
 */
        lombok {
            version = "1.18.24"
        }

        tasks.register("delombok", DelombokTask.class) {
            ext.outputDir = file("$buildDir/delombok")
            outputs.dir(outputDir)
            sourceSets.main.java.srcDirs.each {
                inputs.dir(it)
                args(it, "-d", outputDir)
            }
            doFirst {
                outputDir.deleteDir()
            }
        }

/*
  Javadoc
 */
        javadoc.options.addStringOption('Xdoclint:none', '-quiet')
        javadoc {
            title("${project.name} JavaDoc v${project.version}")
            exclude Set.of('**/internal/**', '**/impl/**', '**Impl', 'Simple**')
            dependsOn delombok
            source = delombok.outputDir
            failOnError = false
        }
        /*
         * Common Configurations
         */
        repositories {
            mavenCentral()
        }
        dependencies {
            compileOnly 'org.jetbrains:annotations:23.0.0'
            testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
            testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
            compileOnly files("./lombok.config")
        }
    }
}